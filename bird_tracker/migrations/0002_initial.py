# Generated by Django 4.2.14 on 2025-04-24 20:05

import cloudinary.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("bird_tracker", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Bird",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("bird_name", models.CharField(max_length=20, unique=True)),
                ("type", models.CharField(max_length=20)),
                (
                    "sex",
                    models.IntegerField(
                        choices=[(0, "Female"), (1, "Male")], default=0
                    ),
                ),
                ("date_of_birth", models.DateField()),
                ("additional_info", models.CharField(max_length=200)),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                (
                    "main_image",
                    cloudinary.models.CloudinaryField(
                        max_length=255, verbose_name="image"
                    ),
                ),
            ],
            options={
                "ordering": ["created_on"],
            },
        ),
        migrations.CreateModel(
            name="DailyData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateTimeField(auto_now=True)),
                ("weight", models.PositiveSmallIntegerField()),
                ("food_type", models.CharField(max_length=12)),
                ("food_weight", models.PositiveSmallIntegerField()),
                (
                    "weather",
                    models.IntegerField(
                        choices=[(0, "Rainy"), (1, "Sunny"), (2, "Windy"), (3, "Cold")],
                        default=1,
                    ),
                ),
                ("temperature", models.IntegerField()),
                (
                    "training",
                    models.IntegerField(
                        choices=[
                            (0, "Featherplay"),
                            (1, "Faustappel"),
                            (2, "Free Flight"),
                        ],
                        default=0,
                    ),
                ),
                (
                    "behaviour",
                    models.IntegerField(
                        choices=[(0, "Motivated"), (1, "Reticent")], default=0
                    ),
                ),
                ("notable_info", models.CharField(default="None", max_length=200)),
                (
                    "notable_image",
                    cloudinary.models.CloudinaryField(
                        default="placeholder", max_length=255, verbose_name="image"
                    ),
                ),
                (
                    "selected_bird",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="selected_bird",
                        to="bird_tracker.bird",
                    ),
                ),
                (
                    "trainer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="trainer",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-date"],
            },
        ),
    ]
